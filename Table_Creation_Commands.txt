create database if not exists Digital_Konbini;
use Digital_Konbini;
create table if not exists Supplier(Supplier_ID numeric(15,0) auto_increment primary key, name Varchar(30) not null, password Varchar(25) not null, email Varchar(50) unique, mobile_number numeric(15,0) unique not null, address Varchar(100));
create table if not exists Product(Product_ID numeric(15,0) auto_increment primary key, Supplier_ID numeric(15,0) not null, name varchar(70) not null, category varchar(50) not null, price numeric(5,0) not null, details varchar(200), quantity_remaining numeric(15,0), discount_percentage numeric(2,0), foreign key(Supplier_ID) references Supplier(Supplier_ID));
create table if not exists Customer(Customer_ID numeric(15,0) auto_increment primary key, name Varchar(30) not null, Mobile_number numeric(15,0) unique not null, password varchar(50) not null, address varchar(100));
create table if not exists Orders(Order_ID numeric(15,0) auto_increment primary key, Customer_ID numeric(15,0) not null, Payment_Date date, Payment_PID numeric(15,0) unique, Delivered_Date date, Coupon_Code_Applied varchar(10) , foreign key(Customer_ID) references Customer(Customer_ID));
create table if not exists Product_Order_Bridge_Table(Order_ID numeric(15,0) not null, Product_ID numeric(15,0) not null, Quantity numeric(2,0), foreign key(Order_ID) references Orders(Order_ID), foreign key(Product_ID) references Product(Product_ID));
create table if not exists Admins(Admin_ID numeric(15,0) auto_increment primary key, name Varchar(30) not null, email varchar(50) unique not null, password varchar(50) not null);
create table if not exists Coupons(Code Varchar(10) unique not null, Admin_ID numeric(15,0) not null, Flat_Discount numeric(4,0) not null, Minimum_cart_value numeric(6,0) not null,foreign key(Admin_ID) references Admins(Admin_ID));
create table if not exists Wishlist_Customer_Product_Bridge_Table(Wishlist_ID numeric(15,0) auto_increment primary key, Customer_ID numeric(15,0) not null, Product_ID numeric(15,0), foreign key(Customer_ID) references Customer(Customer_ID), foreign key(Product_ID) references Product(Product_ID));
create index product_category on product(category);
create index order_ids on product_order_bridge_table(Order_ID);
